name: CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🔍 Build
        run: pnpm run build

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🔍 Lint
        run: pnpm run lint

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📦 Install Playwright
        run: npx playwright install --with-deps

      - name: 🔍 Test
        run: pnpm run test:ci

  preview:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.preview.outputs.preview_url }}
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Enable Corepack
        run: corepack enable
      
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🔍 Pull Vercel Environment Information
        run: npx vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}
      
      - name: 🔍 Build Project Artifacts
        run: npx vercel build --token=${{ env.VERCEL_TOKEN }}
      
      - name: 🚀 Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          URL=$(npx vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }} )
          echo "preview_url=$URL" >> $GITHUB_OUTPUT
      
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: ${{ github.event.number }}
          message: |
            🧷 Preview: ${{ needs.preview.outputs.preview_url }}