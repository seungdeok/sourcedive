name: CD

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    deploy:
      needs: setup
      runs-on: ubuntu-latest
      steps:
        - name: 📦 Checkout Repository
          uses: actions/checkout@v4

        - name: ⚙️ Enable Corepack
          run: corepack enable
        
        - name: ⚙️ Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version-file: .nvmrc
            cache: "pnpm"
            cache-dependency-path: "pnpm-lock.yaml"

        - name: 📦 Install dependencies
          run: pnpm install --frozen-lockfile

        - name: 📦 Install Vercel CLI
          run: pnpm install --global vercel@latest
        
        - name: 🔍 Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}
        
        - name: 🔍 Build Project Artifacts
          run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}
        
        - name: 🚀 Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}